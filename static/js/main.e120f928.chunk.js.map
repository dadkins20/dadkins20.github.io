{"version":3,"sources":["components/__generated__/ProjectCardSmall_project.graphql.js","components/__generated__/ProjectsQuery.graphql.js","components/__generated__/ProjectCardLarge_project.graphql.js","components/__generated__/ProjectQuery.graphql.js","components/ProfilePhoto.jsx","components/ProfileList.jsx","components/Profile.jsx","components/Home.jsx","Environment.jsx","components/ProjectCardSmall.jsx","components/Projects.jsx","components/ProjectCardLarge.jsx","components/Project.jsx","images/resume.pdf","components/Resume.jsx","components/NotFound.jsx","images/profile.jpg","App.js","reportWebVitals.js","index.js"],"names":["node","module","exports","v0","v1","hash","useStyles","makeStyles","theme","root","display","margin","spacing","cursor","small","width","height","medium","large","ProfilePhoto","props","size","variant","classes","Grid","item","className","onClick","document","location","href","Avatar","src","photo","alt","name","maxWidth","backgroundColor","palette","background","paper","ListItemLink","ListItem","button","component","ProfileList","List","Typography","data-testid","ListItemIcon","ListItemText","primary","Divider","aria-label","Profile","container","direction","justify","alignItems","padding","Home","useEffect","title","ReactGA","pageview","window","pathname","search","Paper","elevation","square","environment","Environment","network","Network","create","operation","variables","fetch","method","headers","body","JSON","stringify","query","text","then","response","json","store","Store","RecordSource","media","createFragmentContainer","slug_url","project","slug","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","color","description","CardActions","Button","Projects","render","error","projects","map","__id","history","useHistory","go","source","content","Project","useParams","Resume","useState","numPages","setNumPages","pageNumber","setPageNumber","changePage","offset","prevPageNumber","disabled","file","resume","onLoadSuccess","loading","NotFound","initialize","testMode","process","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","type","ThemeProvider","CssBaseline","Container","lg","md","sm","xs","exact","path","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e120f928.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type ProjectCardSmall_project$ref: FragmentReference;\ndeclare export opaque type ProjectCardSmall_project$fragmentType: ProjectCardSmall_project$ref;\nexport type ProjectCardSmall_project = {|\n  +title: ?string,\n  +description: ?string,\n  +slug: ?string,\n  +image: ?string,\n  +$refType: ProjectCardSmall_project$ref,\n|};\nexport type ProjectCardSmall_project$data = ProjectCardSmall_project;\nexport type ProjectCardSmall_project$key = {\n  +$data?: ProjectCardSmall_project$data,\n  +$fragmentRefs: ProjectCardSmall_project$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ProjectCardSmall_project\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"slug\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Project\",\n  \"abstractKey\": null\n};\n// prettier-ignore\n(node/*: any*/).hash = '9674ada12edd319b5f253ec0fe946be9';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype ProjectCardSmall_project$ref = any;\nexport type ProjectsQueryVariables = {||};\nexport type ProjectsQueryResponse = {|\n  +projects: ?$ReadOnlyArray<?{|\n    +$fragmentRefs: ProjectCardSmall_project$ref\n  |}>\n|};\nexport type ProjectsQuery = {|\n  variables: ProjectsQueryVariables,\n  response: ProjectsQueryResponse,\n|};\n*/\n\n\n/*\nquery ProjectsQuery {\n  projects {\n    ...ProjectCardSmall_project\n  }\n}\n\nfragment ProjectCardSmall_project on Project {\n  title\n  description\n  slug\n  image\n}\n*/\n\nconst node/*: ConcreteRequest*/ = {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Project\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"projects\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ProjectCardSmall_project\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Project\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"projects\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"title\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"description\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"slug\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"image\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"845a2e2ea6cead872a5dfd4f6b1fac32\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectsQuery {\\n  projects {\\n    ...ProjectCardSmall_project\\n  }\\n}\\n\\nfragment ProjectCardSmall_project on Project {\\n  title\\n  description\\n  slug\\n  image\\n}\\n\"\n  }\n};\n// prettier-ignore\n(node/*: any*/).hash = 'fc9b56a97f553285a554751332623dba';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type ProjectCardLarge_project$ref: FragmentReference;\ndeclare export opaque type ProjectCardLarge_project$fragmentType: ProjectCardLarge_project$ref;\nexport type ProjectCardLarge_project = {|\n  +title: ?string,\n  +content: ?string,\n  +image: ?string,\n  +$refType: ProjectCardLarge_project$ref,\n|};\nexport type ProjectCardLarge_project$data = ProjectCardLarge_project;\nexport type ProjectCardLarge_project$key = {\n  +$data?: ProjectCardLarge_project$data,\n  +$fragmentRefs: ProjectCardLarge_project$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ProjectCardLarge_project\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"content\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Project\",\n  \"abstractKey\": null\n};\n// prettier-ignore\n(node/*: any*/).hash = 'a7124ca4d0edf8c7da36f0ac4c5db8b3';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype ProjectCardLarge_project$ref = any;\nexport type ProjectQueryVariables = {|\n  slug: string\n|};\nexport type ProjectQueryResponse = {|\n  +project: ?{|\n    +$fragmentRefs: ProjectCardLarge_project$ref\n  |}\n|};\nexport type ProjectQuery = {|\n  variables: ProjectQueryVariables,\n  response: ProjectQueryResponse,\n|};\n*/\n\n\n/*\nquery ProjectQuery(\n  $slug: String!\n) {\n  project(slug: $slug) {\n    ...ProjectCardLarge_project\n  }\n}\n\nfragment ProjectCardLarge_project on Project {\n  title\n  content\n  image\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"slug\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"slug\",\n    \"variableName\": \"slug\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Project\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ProjectCardLarge_project\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Project\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"title\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"content\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"image\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b9577ff8ed061509a972270b6adee542\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectQuery(\\n  $slug: String!\\n) {\\n  project(slug: $slug) {\\n    ...ProjectCardLarge_project\\n  }\\n}\\n\\nfragment ProjectCardLarge_project on Project {\\n  title\\n  content\\n  image\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'd2a254145f14d03047f8f77f51216508';\n\nmodule.exports = node;\n","import React from 'react';\n// ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n        cursor:'pointer',\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    medium: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n  }));\n\n  export default function ProfilePhoto(props) {\n    const classes = useStyles();\n    let size, variant;\n\n    switch(props.size) {\n        case 'large':\n            size = classes.large;\n            break;\n        case 'medium':\n            size = classes.medium;\n            break;\n        case 'small':\n        default:\n            size = classes.small;\n            break;\n    }\n\n    switch(props.variant) {\n        case 'square':\n            variant = \"square\";\n            break;\n        case 'rounded':\n            variant = \"rounded\";\n            break;\n        default:\n            variant = \"circular\";\n            break;\n    }\n  \n    return (\n        <Grid item className={classes.root} \n            onClick={()=>document.location.href=\"/\"}\n        >\n            <Avatar src={props.photo} \n                alt={props.name}\n                variant={variant}\n                className={size}\n            />\n        </Grid>\n  );\n}","import React from 'react';\n// ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function ProfileList(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <List component=\"nav\">\n      <ListItemLink href=\"/\">\n          <Typography variant='h6'>{props.name}</Typography>\n        </ListItemLink>\n        <ListItemLink href=\"#/projects\" data-testid=\"project-link\">\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Projects\" />\n        </ListItemLink>\n        <ListItemLink href=\"#/resume\" data-testid=\"resume-link\">\n          <ListItemIcon>\n            <DescriptionIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Resume\" />\n        </ListItemLink>\n      </List>\n      <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItemLink href=\"https://linkedin.com/in/davidjadkins\">\n          <ListItemIcon>\n            <LinkedInIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"davidjadkins\" />\n        </ListItemLink>\n        <ListItemLink href=\"https://facebook.com/DavidJAdkins\">\n          <ListItemIcon>\n            <FacebookIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"DavidJAdkins\" />\n        </ListItemLink>\n        <ListItemLink href=\"https://github.com/dadkins20\">\n          <ListItemIcon>\n            <GitHubIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"dadkins20\" />\n        </ListItemLink>\n        <ListItemLink href=\"https://twitter.com/davidadkins\">\n          <ListItemIcon>\n            <TwitterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"davidadkins\" />\n        </ListItemLink>\n        <ListItemLink href=\"https://instagram.com/adventuresofdavid\">\n          <ListItemIcon>\n            <InstagramIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"adventuresofdavid\" />\n        </ListItemLink>\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\n// ui imports\nimport ProfilePhoto from './ProfilePhoto';\nimport ProfileList from './ProfileList';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Profile(props) {\n    return (\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\n            <ProfilePhoto photo={props.photo} \n                alt={props.name}\n                size=\"large\"\n            />\n            <ProfileList name={props.name} />\n        </Grid>\n    );\n}\nexport default Profile;","import React, { useEffect } from 'react';\n// ui imports\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n// ga imports\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin:'40px auto',\n      padding:'25px',\n    }\n  }));\n\nfunction Home(props) {\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Home - David Adkins\";\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n    const classes = useStyles();\n\n    return ( \n        <Paper elevation={3} square={true} className={classes.paper}>\n            I really don't have a lot to say here.  I wanted to brush up on React and Node\n            wanted to learn about writing Jest tests and deploying sites through Travis to GH Pages.\n            Now I have my own site, it's ugly, but it's mine. I may update, I may not, time will tell.\n            <Typography component={'span'} variant={'body2'}>\n                Here's a quick intro on my interests:\n\n                <ul>\n                    <li>Front End Dev (React, JS, Node)</li>\n                    <li>Back End Dev (Golang, Python, PHP)</li>\n                    <li>Machine Learning (Reinforcement Learning, CNN, GANs)</li>\n                    <li>Responsible AI (Interpretability, Robustness, Explainability)</li>\n                </ul>\n\n            </Typography>\n            <Typography component={'span'} variant={'body2'}>\n            I want some cards here for some of my personal projects.\n            </Typography>\n        </Paper>\n    );\n}\n\nexport default Home;","import {\n    Environment,\n    Network,\n    RecordSource,\n    Store,\n  } from 'relay-runtime';\n\nconst apihost = (process.env.NODE_ENV === 'development' ? '' : 'https://gql-davidadins-com.davidadkinscom.uk.r.appspot.com');\n  \nfunction fetchQuery(operation,variables,) {\n    return fetch(`${apihost}/graphql`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            query: operation.text,\n            variables,\n        }),\n    }).then(response => {\n        return response.json();\n    });\n}\n  \nconst environment = new Environment({\n    network: Network.create(fetchQuery),\n    store: new Store(new RecordSource()),\n});\n\nexport default environment;","import React from 'react';\n// graphql and relay imports\nimport { createFragmentContainer } from 'react-relay';\nimport graphql from 'babel-plugin-relay/macro';\n// ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 290,\n    margin:\"7px\",\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction ProjectCardSmall(props) {\n  const classes = useStyles();\n  let slug_url = \"#/projects/\" + props.project.slug;\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.project.image}\n          title={props.project.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.project.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.project.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" href={slug_url}>\n          See Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default createFragmentContainer(\n  ProjectCardSmall,\n  { project: graphql`\n    fragment ProjectCardSmall_project on Project {\n      title\n      description\n      slug\n      image\n    }\n  `, }\n)","import React, { useEffect } from 'react';\n// graphql and relay imports\nimport graphql from 'babel-plugin-relay/macro';\nimport environment from '../Environment';\nimport {QueryRenderer} from 'react-relay';\n// ui imports\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCardSmall from './ProjectCardSmall';\n// google analytics import\nimport ReactGA from 'react-ga';\n\nfunction Projects(props) {\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Projects - DavidAdkins.com\";\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n\n    // todo: load the media cards dynamically from graphql, need image field too\n    return (\n        <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n            <QueryRenderer\n                environment={environment}\n                query={graphql`\n                query ProjectsQuery{\n                    projects {\n                        ...ProjectCardSmall_project\n                    }\n                }\n                `}\n                render={({error, props}) => {\n                    if (error) { return <div>Error Loading Projects!</div>; }\n                    if (!props) { return <div>Loading projects...</div>; }\n                    return props.projects.map(( node ) => <ProjectCardSmall key={node.__id} project={node} />)\n                    }\n                }\n            />\n        </Grid>\n    );\n}\n\nexport default Projects;","import React, { useEffect } from 'react';\n// graphql and relay imports\nimport { createFragmentContainer } from 'react-relay';\nimport graphql from 'babel-plugin-relay/macro';\n// react router import to use history\nimport { useHistory } from 'react-router-dom';\n// ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// to process markdown\nimport ReactMarkdown from 'react-markdown';\n// google analytics import\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: \"100%\",\n      margin:\"7px\",\n    },\n    media: {\n      height: 340,\n    },\n  });\n\nfunction ProjectCardLarge(props) {\n    const classes = useStyles();\n    let history = useHistory();\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `${props.project.title} - DavidAdkins.com`;\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n\n    return (\n        <Card className={classes.root}>\n          <CardActions>\n              <Button onClick={() => history.go(-1)}>Back</Button>\n          </CardActions>\n          <CardActionArea>\n              <CardMedia\n              className={classes.media}\n              image={props.project.image}\n              title={props.project.title}\n              />\n              <CardContent>\n              <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                  {props.project.title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  <ReactMarkdown source={props.project.content} />\n              </Typography>\n              </CardContent>\n          </CardActionArea>\n          <CardActions>\n              <Button onClick={() => history.go(-1)}>Back</Button>\n          </CardActions>\n        </Card>\n    );\n}\n\nexport default createFragmentContainer(\n    ProjectCardLarge,\n    { project: graphql`\n      fragment ProjectCardLarge_project on Project {\n        title\n        content\n        image\n      }\n    `, }\n  )","import React from 'react';\n// react router import to get slug from URL\nimport { useParams } from 'react-router-dom';\n// graphql and relay imports\nimport {QueryRenderer} from 'react-relay';\nimport graphql from 'babel-plugin-relay/macro';\nimport environment from '../Environment';\n// ui imports\nimport ProjectCardLarge from './ProjectCardLarge';\n\nfunction Project(props) {\n    let { slug } = useParams();\n\n    return (\n            <QueryRenderer\n                environment={environment}\n                query={graphql`\n                query ProjectQuery($slug: String!){\n                    project (slug: $slug) {\n                        ...ProjectCardLarge_project\n                    }\n                }\n                `}\n                variables={{slug}}\n                render={({error, props}) => {\n                    if (error) {\n                        return <div>Error Loading Project!</div>;\n                    }\n                    if (!props) {\n                        return <div>Loading project...</div>;\n                    }\n                    return <ProjectCardLarge project={props.project} />;\n                    }\n                }\n            />\n    );\n}\nexport default Project;","export default __webpack_public_path__ + \"static/media/resume.6e449fed.pdf\";","import React, { useState, useEffect } from 'react';\n// ui imports\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Document, Page } from 'react-pdf/dist/umd/entry.webpack';\nimport 'react-pdf/dist/umd/Page/AnnotationLayer.css';\n// other imports\nimport resume from '../images/resume.pdf';\n// ga imports\nimport ReactGA from 'react-ga';\n\nfunction Resume(props) {\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Resume - DavidAdkins.com\";\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n  \n    function onDocumentLoadSuccess({ numPages }) {\n      setNumPages(numPages);\n      setPageNumber(1);\n    }\n  \n    function changePage(offset) {\n      setPageNumber(prevPageNumber => prevPageNumber + offset);\n    }\n  \n    function previousPage() {\n      changePage(-1);\n    }\n  \n    function nextPage() {\n      changePage(1);\n    }\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item>\n                <Typography variant='h6'>\n                    <Button disabled={pageNumber <= 1} onClick={previousPage}>\n                        <ArrowBackIosIcon />\n                    </Button>\n                    {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\n                    <Button disabled={pageNumber >= numPages} onClick={nextPage} >\n                        <ArrowForwardIosIcon />\n                    </Button>\n                </Typography>\n            </Grid>\n            <Document \n                file={resume} \n                onLoadSuccess={onDocumentLoadSuccess} \n                loading=\"Loading...\"\n                error = \"Error...\"\n            >\n                <Page pageNumber={pageNumber} />\n            </Document>\n        </Grid>\n    );\n}\n\nexport default Resume;","import React, { useEffect } from 'react';\nimport ReactGA from 'react-ga';\n\nfunction NotFound(props) {\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Not Found - David Adkins\";\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n    return (\n        <div>\n            Error 404 - Page Not Found\n        </div>\n    );\n}\nexport default NotFound;","export default __webpack_public_path__ + \"static/media/profile.008281d9.jpg\";","import './App.css';\nimport React /*, {useState, useEffect} */ from 'react';\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Profile from './components/Profile';\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport Project from './components/Project';\nimport Resume from './components/Resume';\nimport NotFound from './components/NotFound';\n\nimport photo from './images/profile.jpg';\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-3409363-10', { testMode: (process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'development') });\n\nconst name = \"David Adkins\";\n\nconst useStyles = makeStyles(theme => ({\n  color: {\n    backgroundColor: '#e0692d'\n  }\n}));\n\nfunction App() {\n\n  // NOTE: Any call to App must be surrounded by a <Router history={}> or <BrowserRouter> component!!!\n\n  // const [view, setView] = useState(\"Home\");\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={3}>\n\n            <Grid item lg={3} md={3} sm={6} xs={12}>\n              <Profile name={name} photo={photo} />\n            </Grid>\n\n            <Grid item lg={9} md={9} sm={6} xs={12} className={classes.color}  data-testid=\"content-page\">\n              <Switch>\n                <Route exact path=\"/resume\">\n                  <Resume />\n                </Route>\n                <Route exact path=\"/projects\">\n                  <Projects />\n                </Route>\n                <Route path=\"/projects/:slug\">\n                  <Project />\n                </Route>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"*\" component={NotFound} status={404} />\n              </Switch>\n            </Grid>\n\n          </Grid>\n        </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}